import numpy as np

# THIS IS GENERATED BY GEMINI AI
# it helps to approximate things like scaling the heart SDFs to the correct size though

# Sample data points
x = np.array([1.9, 1.5, 1.89, 1.8])
y = np.array([10, 2, 9.9, 6.77])

# Define a quadratic function
def quadratic(x, a, b, c):
  return a * x**2 + b * x + c

# Fit the function to the data points using least squares
coefficients = np.linalg.lstsq(np.vstack([x**2, x, np.ones(len(x))]).T, y, rcond=None)[0]

# Print the coefficients
print("Coefficients of the quadratic function:", coefficients)

# Evaluate the function at a few points
x_eval = np.linspace(1.4, 2, 100)
y_eval = quadratic(x_eval, *coefficients)

# Plot the data points and the fitted function
import matplotlib.pyplot as plt
plt.plot(x, y, 'o', label='Data points')
plt.plot(x_eval, y_eval, label='Fitted quadratic')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()
